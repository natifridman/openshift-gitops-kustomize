apiVersion: argoproj.io/v1alpha1
kind: ArgoCD
metadata:
  name: openshift-gitops
  namespace: openshift-gitops
spec:
  applicationSet:
    resources:
      limits:
        cpu: "2"
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 512Mi
  controller:
    processors: {}
    resources:
      limits:
        cpu: "2"
        memory: 2Gi
      requests:
        cpu: 250m
        memory: 1Gi
    sharding: {}
  dex:
    openShiftOAuth: true
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  grafana:
    enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
    route:
      enabled: false
  ha:
    enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  initialSSHKnownHosts: {}
  prometheus:
    enabled: false
    ingress:
      enabled: false
    route:
      enabled: false
  rbac:
    policy: g, system:cluster-admins, role:admin
    scopes: '[groups]'
  redis:
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  repo:
    env:
      - name: AVP_TYPE
        value: vault
      - name: VAULT_ADDR
        value: 'http://vault-vault.apps.db5.cars.lab'
      - name: AVP_AUTH_TYPE
        value: approle
      - name: AVP_ROLE_ID
        value: '9d5f1031-0e0e-c9ef-963a-57b38ece6f8a'
      - name: AVP_SECRET_ID
        value: 690c633c-620a-d0b2-55a2-4953786fee8f
    initContainers:
      - command:
          - /bin/sh
          - '-c'
          - >-
            curl -v  -LJ --tls-max 1.2
            https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v1.7.0/argocd-vault-plugin_1.7.0_linux_amd64
            -o argocd-vault-plugin && chmod -v +x argocd-vault-plugin
        image: 'registry.redhat.io/ubi8/ubi:latest'
        name: install-vault
        volumeMounts:
          - mountPath: /vault-plugin
            name: vault-plugin
        workingDir: /vault-plugin
    volumeMounts:
      - mountPath: /usr/local/bin/argocd-vault-plugin
        name: vault-plugin
        subPath: argocd-vault-plugin
    volumes:
      - emptyDir: {}
        name: vault-plugin
    mountsatoken: true
    serviceaccount: vplugin
    resources:
      limits:
        cpu: "1"
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 256Mi
  resourceCustomizations: |
    bitnami.com/SealedSecret:
      health.lua: |
        hs = {}
        hs.status = "Healthy"
        hs.message = "Controller doesnt report status"
        return hs
    route.openshift.io/Route:
      ignoreDifferences: |
        jsonPointers:
        - /spec/host
  resourceExclusions: |
    - apiGroups:
      - tekton.dev
      - internal.open-cluster-management.io
      clusters:
      - '*'
      kinds:
      - TaskRun
      - PipelineRun
      - ManagedClusterInfo
  server:
    autoscale:
      enabled: false
    grpc:
      ingress:
        enabled: false
    ingress:
      enabled: false
    insecure: true
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 125m
        memory: 128Mi
    route:
      enabled: true
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
    service:
      type: ""
  configManagementPlugins: |-
    - name: argocd-vault-plugin
      generate:
        command: ["argocd-vault-plugin"]
        args: ["generate", "./"]
    - name: argocd-vault-plugin-kustomize
      generate: 
        command: ["sh", "-c"]
        args: ["kustomize build . | argocd-vault-plugin generate -"]
  tls:
    ca: {}
